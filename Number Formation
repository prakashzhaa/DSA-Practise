>>Discription:
Given three integers x, y, and z, the task is to find the sum of all the numbers formed by 
having 4 at most x times, having 5 at most y times, and having 6 at most z times as a digit.

Note: Output the sum modulo 109+7.

>>Expected Time Complexity: O(X*Y*Z)
>>Expected Auxiliary Space: O(X*Y*Z)

>>Input:
X=1 Y=1 Z=1

>> Code:

class Solution {

    public int getSum(int X, int Y, int Z) {
        
        // Your code goes here
        int mod=1000000007;
        long [][][] exactSum=new long[X+1][Y+1][Z+1];
        long [][][] num=new long[X+1][Y+1][Z+1];
        long ans=0L;
        num[0][0][0]=1L;
        for(int i=0;i<=X;i++){
            for(int j=0;j<=Y;j++){
                for(int k=0;k<=Z;k++){
                    if(i>0){
                        exactSum[i][j][k]+=(exactSum[i-1][j][k]*10+4*num[i-1][j][k])%mod;
                        num[i][j][k]+=num[i-1][j][k]%mod;
                    }
                    if(j>0){
                        exactSum[i][j][k]+=(exactSum[i][j-1][k]*10+5*num[i][j-1][k])%mod;
                        num[i][j][k]+=num[i][j-1][k]%mod;
                    }
                    if(k>0){
                        exactSum[i][j][k]+=(exactSum[i][j][k-1]*10+6*num[i][j][k-1])%mod;
                        num[i][j][k]+=num[i][j][k-1]%mod;
                    }
                    ans+=exactSum[i][j][k]%mod;
                    ans%=mod;
                                
                }
                
            }
        }
        return (int)ans;
    }
}

>> Output:

3675

>> Explaination:

4 + 5 + 6 + 45 + 54 + 56 
+ 65 + 46 + 64 + 456 + 465 
+ 546 + 564 + 645 + 654 = 3675
